// Code generated by ogen, DO NOT EDIT.

package gen

// CreateUserBadRequest is response for CreateUser operation.
type CreateUserBadRequest struct{}

func (*CreateUserBadRequest) createUserRes() {}

// CreateUserCreated is response for CreateUser operation.
type CreateUserCreated struct{}

func (*CreateUserCreated) createUserRes() {}

// CreateUserInternalServerError is response for CreateUser operation.
type CreateUserInternalServerError struct{}

func (*CreateUserInternalServerError) createUserRes() {}

// GetEmployeesBadRequest is response for GetEmployees operation.
type GetEmployeesBadRequest struct{}

func (*GetEmployeesBadRequest) getEmployeesRes() {}

// GetEmployeesInternalServerError is response for GetEmployees operation.
type GetEmployeesInternalServerError struct{}

func (*GetEmployeesInternalServerError) getEmployeesRes() {}

// GetEmployeesOK represents sum type.
type GetEmployeesOK struct {
	Type    GetEmployeesOKType // switch on this field
	Member  Member
	Manager Manager
}

// GetEmployeesOKType is oneOf type of GetEmployeesOK.
type GetEmployeesOKType string

// Possible values for GetEmployeesOKType.
const (
	MemberGetEmployeesOK  GetEmployeesOKType = "Member"
	ManagerGetEmployeesOK GetEmployeesOKType = "Manager"
)

// IsMember reports whether GetEmployeesOK is Member.
func (s GetEmployeesOK) IsMember() bool { return s.Type == MemberGetEmployeesOK }

// IsManager reports whether GetEmployeesOK is Manager.
func (s GetEmployeesOK) IsManager() bool { return s.Type == ManagerGetEmployeesOK }

// SetMember sets GetEmployeesOK to Member.
func (s *GetEmployeesOK) SetMember(v Member) {
	s.Type = MemberGetEmployeesOK
	s.Member = v
}

// GetMember returns Member and true boolean if GetEmployeesOK is Member.
func (s GetEmployeesOK) GetMember() (v Member, ok bool) {
	if !s.IsMember() {
		return v, false
	}
	return s.Member, true
}

// NewMemberGetEmployeesOK returns new GetEmployeesOK from Member.
func NewMemberGetEmployeesOK(v Member) GetEmployeesOK {
	var s GetEmployeesOK
	s.SetMember(v)
	return s
}

// SetManager sets GetEmployeesOK to Manager.
func (s *GetEmployeesOK) SetManager(v Manager) {
	s.Type = ManagerGetEmployeesOK
	s.Manager = v
}

// GetManager returns Manager and true boolean if GetEmployeesOK is Manager.
func (s GetEmployeesOK) GetManager() (v Manager, ok bool) {
	if !s.IsManager() {
		return v, false
	}
	return s.Manager, true
}

// NewManagerGetEmployeesOK returns new GetEmployeesOK from Manager.
func NewManagerGetEmployeesOK(v Manager) GetEmployeesOK {
	var s GetEmployeesOK
	s.SetManager(v)
	return s
}

func (*GetEmployeesOK) getEmployeesRes() {}

// GetUserByIdInternalServerError is response for GetUserById operation.
type GetUserByIdInternalServerError struct{}

func (*GetUserByIdInternalServerError) getUserByIdRes() {}

// GetUserByIdNotFound is response for GetUserById operation.
type GetUserByIdNotFound struct{}

func (*GetUserByIdNotFound) getUserByIdRes() {}

// GetUsersBadRequest is response for GetUsers operation.
type GetUsersBadRequest struct{}

func (*GetUsersBadRequest) getUsersRes() {}

// GetUsersInternalServerError is response for GetUsers operation.
type GetUsersInternalServerError struct{}

func (*GetUsersInternalServerError) getUsersRes() {}

// Ref: #/components/schemas/Manager
type Manager struct {
	ID         string   `json:"id"`
	Name       string   `json:"name"`
	Email      string   `json:"email"`
	Department string   `json:"department"`
	Teams      []string `json:"teams"`
}

// GetID returns the value of ID.
func (s *Manager) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Manager) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *Manager) GetEmail() string {
	return s.Email
}

// GetDepartment returns the value of Department.
func (s *Manager) GetDepartment() string {
	return s.Department
}

// GetTeams returns the value of Teams.
func (s *Manager) GetTeams() []string {
	return s.Teams
}

// SetID sets the value of ID.
func (s *Manager) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Manager) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *Manager) SetEmail(val string) {
	s.Email = val
}

// SetDepartment sets the value of Department.
func (s *Manager) SetDepartment(val string) {
	s.Department = val
}

// SetTeams sets the value of Teams.
func (s *Manager) SetTeams(val []string) {
	s.Teams = val
}

// Ref: #/components/schemas/Member
type Member struct {
	ID         string `json:"id"`
	Name       string `json:"name"`
	Email      string `json:"email"`
	Department string `json:"department"`
	Team       string `json:"team"`
}

// GetID returns the value of ID.
func (s *Member) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Member) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *Member) GetEmail() string {
	return s.Email
}

// GetDepartment returns the value of Department.
func (s *Member) GetDepartment() string {
	return s.Department
}

// GetTeam returns the value of Team.
func (s *Member) GetTeam() string {
	return s.Team
}

// SetID sets the value of ID.
func (s *Member) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Member) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *Member) SetEmail(val string) {
	s.Email = val
}

// SetDepartment sets the value of Department.
func (s *Member) SetDepartment(val string) {
	s.Department = val
}

// SetTeam sets the value of Team.
func (s *Member) SetTeam(val string) {
	s.Team = val
}

// NewOptNilInt32 returns new OptNilInt32 with value set to v.
func NewOptNilInt32(v int32) OptNilInt32 {
	return OptNilInt32{
		Value: v,
		Set:   true,
	}
}

// OptNilInt32 is optional nullable int32.
type OptNilInt32 struct {
	Value int32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt32 was set.
func (o OptNilInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt32) SetTo(v int32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt32) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt32) SetToNull() {
	o.Set = true
	o.Null = true
	var v int32
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/User
type User struct {
	ID    string      `json:"id"`
	Name  string      `json:"name"`
	Email string      `json:"email"`
	Age   OptNilInt32 `json:"age"`
}

// GetID returns the value of ID.
func (s *User) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetAge returns the value of Age.
func (s *User) GetAge() OptNilInt32 {
	return s.Age
}

// SetID sets the value of ID.
func (s *User) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetAge sets the value of Age.
func (s *User) SetAge(val OptNilInt32) {
	s.Age = val
}

func (*User) getUserByIdRes() {}

type Users []User

func (*Users) getUsersRes() {}
